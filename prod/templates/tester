#!/bin/bash

if [ $# -ne 1 ]; then
	echo "Usage:"
	echo "	$0 path or $0 test"
	exit 1
fi

function prt {
	echo "$1" 2>&1 | tee -a $REPORT_FILE
}

function exe {
	echo "Execute	:	"$@ 2>&1 | tee -a $REPORT_FILE
	$@ 2>&1 | tee -a $REPORT_FILE
	return ${PIPESTATUS[0]}
}

ABS_PATH=
if [[ ${1:0:1} == "/" ]]; then
	ABS_PATH=$1
elif [[ ${1:0:1} == "." || $1 == *"/"* ]]; then
	parent=$(dirname $1)
	if [ ! -d "$parent" ]; then
		prt "error: wrong path $1"
		exit 1
	fi
	ABS_PATH=$(cd $parent && pwd)/$(basename $1)
fi

if [ "$ABS_PATH" = "" ]; then
	results=$(find $TEST_SRC_DIR -name $1)
	if [ "$results" = "" ]; then
		prt "error: wrong test $1"
		exit 1
	fi
	count=$(awk -F' ' '{print NF}' <<< $results)
	if [ $count -gt 1 ]; then
		prt "too many results:"
		for res in $results; do
			prt "	$res"
		done
		exit 1
	fi
	ABS_PATH=$results
fi

if [ ${ABS_PATH:0:${#TEST_SRC_DIR}} != ${TEST_SRC_DIR} ]; then
	prt "error: $ABS_PATH not in $TEST_SRC_DIR"
	exit 1
fi

function what_is_type {
	local TEST_TYPE=
	if [[ ${1} == *".c" ]]; then
		TEST_TYPE="c"
	elif [[ ${1} == *".sh" ]]; then
		TEST_TYPE="sh"
	elif [ ! -d $1 ]; then
		TEST_TYPE="unknown"
	elif [ -f $1/run ]; then
		TEST_TYPE="single-directory-test"
	else
		TEST_TYPE="test-directory"
	fi
	echo $TEST_TYPE
}

function do_c_test {
	START=$(date +%s)
	passed=0
	total=$((total + 1))
	prt ""
	prt "C-TEST	:	$1"
	local tmp="$TEST_OBJ_DIR${1:${#TEST_SRC_DIR}}"
	target=$(sed -e "s/.c$//g" <<< $tmp)
	rm -rf $target
	local base_dir=$(dirname $target)
	prt "Folder	:	$base_dir/"
	mkdir -p $base_dir
	local res=$?
	if [ $res -eq 0 ]; then
		exe gcc -Wall -g -std=c99 -pedantic $1 $LIBS -I $SRC_DIR -o $target
		res=$?
		if [ $res -eq 0 ]; then
			exe $target
			res=$?
			if [ $res -eq 0 ]; then
				prt "Status	:	PASS"
				pass=$((pass + 1))
				passed=1
			fi
		fi
	fi
	if [ $passed = 0 ]; then
		fail=$((fail + 1))
		prt "Status	:	FAIL"
	fi
	END=$(date +%s)
	DIFF=$(( $END - $START ))
	prt "Time	:	${DIFF} s"
	prt ""
}

function do_sh_test {
	START=$(date +%s)
	total=$((total + 1))
	prt ""
	prt "SH-TEST	:	$1"
	exe $1
	if [ $? -eq 0 ]; then
		prt "Status	:	PASS"
		pass=$((pass + 1))
	else
		prt "Status	:	FAIL"
		fail=$((fail + 1))
	fi
	END=$(date +%s)
	DIFF=$(( $END - $START ))
	prt "Time	:	${DIFF} s"
	prt ""
}

function do_single_directory_test {
	START=$(date +%s)
	passed=0
	total=$((total + 1))
	prt ""
	prt "SD-TEST	:	$1"
	local target_dir="$TEST_OBJ_DIR${1:${#TEST_SRC_DIR}}"
	prt "Folder	:	$target_dir/"
	rm -rf $target_dir
	mkdir -p $target_dir
	local res=$?
	if [ $res -eq 0 ]; then
		exe $1/run $target_dir
		res=$?
		if [ $res -eq 0 ]; then
			prt "Status	:	PASS"
			pass=$((pass + 1))
			passed=1
		fi
	fi
	if [ $passed = 0 ]; then
		prt "Status	:	FAIL"
		fail=$((fail + 1))
	fi
	END=$(date +%s)
	DIFF=$(( $END - $START ))
	prt "Time	:	${DIFF} s"
	prt ""
}

function doit {
	TEST_TYPE=$(what_is_type $1)
	if [ "$TEST_TYPE" = "unknown" ]; then
		prt "PATH: $1, TEST_TYPE: $TEST_TYPE"
		exit 1
	fi
	if [ "$TEST_TYPE" = "test-directory" ]; then
		for item in $1/*; do
			if [ "$item" = "$1/*" ]; then
				continue
			fi
			doit $item
			if [ $? -ne 0 ]; then
				exit 1
			fi
		done
	elif [ "$TEST_TYPE" = "c" ]; then
		do_c_test $1
	elif [ "$TEST_TYPE" = "sh" ]; then
		do_sh_test $1
	elif [ "$TEST_TYPE" = "single-directory-test" ]; then
		do_single_directory_test $1
	fi
}

prt "====================================="
prt "TESTER started at $(date '+%Y.%m.%d %H:%M:%S')"

total=0
pass=0
fail=0
doit $ABS_PATH

prt ""
prt "-------------------------"
prt "|TOTAL	:	$total	|"
prt "|-----------------------|"
prt "|PASS	:	$pass	|"
prt "|-----------------------|"
prt "|FAIL	:	$fail	|"
prt "-------------------------"
prt ""

prt "TESTER ended at $(date '+%Y.%m.%d %H:%M:%S')"
prt "==================================="
